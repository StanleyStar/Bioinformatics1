# To generate sequences, you need to have two information - the length of sequence and list of nucleotides.

# First step, we define the sequence length, ie the number of nucleotides we want in the sequence
length = 10
# Secondly, we supply the list of nucleeotides/bases
bases =  ['A', 'C', 'G', 'T']

# Generate a sequence

# First is to import a random module
from random import choice

# Approach 1: Using the for loop
# Create an empty sequence
sequence = ""
# Randomly select a base and add it to the sequence (repeat 10 times)
for i in range(length):
    base = choice(bases)
    sequence+=base
print(sequence)

# Approach 2: Using a list comprehension (this compresses the classical for loop in a single line)
sequence = [choice(bases) for i in range(length)]
print(sequence)
# PS: Convert the lists to a string
sequence = "".join(sequence)
print(sequence)

# Approach 3: Using a while loop. This approach should be the last you consider, as the while loop can be problematic. With while loops, if you don't set the correct conditions, you can meet a situation called Endless Loop, whereby the loops continues. If you encounter such situation, just press the ctrl+c button, and it will exit the loop.
# Create an empty list
sequence = ""
while len(sequence)!=10:
    base = choice(bases)
    sequence+=base
print(sequence)
# So far, we've been able to generate single sequences. Let's see how we can generate multiple sequences

# Generate multiple sequences
# To do this, we are going to use functions and loops.

# Import a random module
from random import choice

# Then we create a function to generate a sequence
def generate_sequence(length = 10):
    bases =  ['A', 'C', 'G', 'T']
    sequence = [choice(bases) for i in range(length)]
    sequence = "".join(sequence)
    return sequence

# Scenario 1: To generate sequences of the same length
number_of_sequences = 5
sequences = [generate_sequence(5) for i in range(number_of_sequences)]
print(sequences)

# Scenario 2: To generate sequences with different lengths (two situations here)

# For a situation where the user defines length
lengths = [10, 5, 6, 5]
sequences = [generate_sequence(length) for length in lengths]
print(sequences)
length_of_first_sequence = len(sequences[0])
print(length_of_first_sequence)

# For computer generated lengths. The numbers will be randomly generated by Python
# Import modules
from random import choice
from random import randint
# Define the number of sequences
number_of_sequences = 5
# Generate the lengths using randint. When using randint, we need to speecify the range so Python will selcet the numbers in a particular range
lengths = [randint(5,10) for i in range (number_of_sequences)]
print(lengths)
sequences = [generate_sequence(length) for length in lengths]
print(sequences)
